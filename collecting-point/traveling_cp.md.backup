

All copied to Travelling CP from working cp for laptop editing.  5/31/25


Notes to self to consider:
reminders.md
stdwrk.md
thoughts.md --> This should probably be the collecting points
backup-and-restore.md -- This needs work / additions

# Backup and Restore: zBITX-Wiki Development Environment

This guide describes how to create and restore a backup of the full development environment for the zBITX-Wiki, including all content, configuration, and Git history.

---

## ? Backup Instructions

### ? What?s Included:
- Project files (Markdown, config, assets, etc.)
- `.git` directory with full Git history and local branches
- Python virtual environment (optional)
- Local-only notes and untracked files

### ? When to Back Up:
- After major changes or successful GitHub Pages deployments
- Before system upgrades or Raspberry Pi changes
- Periodically, as insurance against SD card failure

---

### ? Step-by-Step Backup (from home directory)

```bash
# Move to your home directory (or parent of zBITX-Wiki)
cd ~

# Create a compressed archive with today's date
tar -czf zbitx-wiki-full-backup-$(date +%Y%m%d).tar.gz zBITX-Wiki/






Create (or Recreate) Virtual Environment:  
python3 -m venv zbitx-wiki-env


Activate Virtual Environment:  
For zbit-wiki:  source zbitx-wiki-env/bin/activate

For mkdocs-starter:  source env/bin/activate


Deactivate Virtual Environment:  
deactivate

You can save your Python environment in case you need to rebuild again:
pip freeze > requirements.txt   DONE 5/31/25

Then in the future you can restore with:
pip install -r requirements.txt



Before Shutting Down, move out of project directoy:  
cd ~


Preferred Shutdown Method:  
sudo shutdown now


My Web Site Ought to be at:
https://N5QC.github.io/zBITX-Wiki/



Linux_CL_Reminders

sudo apt-get update
sudo apt-get upgrade
sudo apt-get dist-upgrade
logout or exit
sudo reboot
sudo shutdown -h now


sudo raspi-config

*~~Test 5/30/25 AM:  https://N5QC.github.io/zBITX-Wiki/~~*



Alternative Resources:

GitHub Pages Overview:  https://pages.github.com/

Your GitHub Pages site is currently being built from the gh-pages branch
https://docs.github.com/articles/configuring-a-publishing-source-for-github-pages/

There isn't a GitHub Pages site here.

If you're trying to publish one, read the full documentation to learn how to set up GitHub Pages for your repository, organization, or user account. 
 
https://help.github.com/pages/


===========================

Set up new GitHub Repository:
https://github.com/N5QC/N5QC.github.io.git

git clone https://github.com/N5QC/N5QC.github.io.git


Fire up a browser and go to https://N5QC.github.io




git remote add origin https://github.com/n5qc/zbit-wiki.git




git remote add origin https://github.com/n5qc/zbitx-wiki.git


INFO    -  Your documentation should shortly be available at:
           https://n5qc.github.io/zbitx-wiki/
           
           






**Wiki Planning**

Find a better markdown editor.
	One that is free and open source and graphical. 
	Can work in the Raspberry Pi. 
	Nice. 
		Cross-platform.

Ghostwriter

Tried to fix Fail by running:  sudo apt-get install python-software-properties

sudo add-apt-repository **-->  FAIL**


sudo apt-get update


sudo add-apt-repository ppa:wereturtle/ppa

sudo apt-get install software-properties-common


sudo apt update
sudo apt install ghostwriter

**sudo apt install ghostwriter  --> This Worked!**

Once installed, it’s straightforward to open and
run Markdown files. I use the command
ghostwriter in the Terminal to open the app,
though it should also be available under the
Raspberry Pi menu. The menu along the top
can be used to open files, toggle preview
window, and enter focus mode (where I like to
do my serious writing).

Pandoc
sudo apt install pandoc

Suggested packages:
  texlive-latex-recommended texlive-xetex texlive-luatex pandoc-citeproc
  texlive-latex-extra context wkhtmltopdf librsvg2-bin groff ghc nodejs php
  python ruby r-base-core libjs-mathjax libjs-katex
  citation-style-language-styles

sudo apt install texlive-latex-recommended texlive-xetex texlive-luatex texlive-latex-extra context wkhtmltopdf librsvg2-bin groff ghc nodejs php ruby r-base-core libjs-mathjax libjs-katex citation-style-language-styles


Pandoc as an option on how you can output
Markdown to another format.

https://pandoc.org/MANUAL.html

 

**Do Backlog grooming.** 

Get the thoughts together, include literature search and. Pulling in diverse notes. 
Build the out via notebook LM. 
Start populating. 
Go ahead and work on multiple pages to get them boilerplate added. 
	Home landing page. Welcome to the Z bit X wiki and getting started. 
	Update the footer. It says currently copyright N5QC add "and contributors"
	Change Log 
	Contributing
	FAQ
	Hardware
	Software
	Backlog
	License call the license good for now. 

Backlog 

Software 
	Do a search
	Mention the A Faron GitHub site, which is the current dev site
	Mention Forks. 
	Find whatever ones makes sense to list. 
		Include the one with pretty good documentation and build it out and go through. 
		Include the one with shut down 
		Any others that make sense to include

Hardware
	Pictures and schematics
	Talk about the general architecture
		Pi Zero
		Pico. 

History add in some things about overheating and etc.

FAQ. Start building a list there 

Contributing change and n5qc e-mail address to the groups dot IO. 

Change log. 

And once this is done, go ahead and do a literature search and start compiling note. 
My workflow will go through notebook LM build 

Notes to Self CHEAT SHEET and build in the backup schedule, backup plan and anything else that seems to make sense. 

And I think that's it for now. 

Then pay homage to groups that I owe and uh get all this done and get a good back up and go live. 

I think that's about enough for this session, but I'm sure there's more to come. 


================================================================================

2025 05 31 Additional Thoughts

Some background about me. 

Why did I do this? I decided that I was going to research the Z bit X and started making notes. 
Looked like it would be useful to share them, so I decided to put them in the wiki. 
Looking forward to what things I might want to do, I decided that publishing a site via GitHub would be a good learning experience, so I chose to do that on the Raspberry Pi. 

Is this the best way to do it? 
Not necessarily. 

Is this a learning experience for me? 
Yes, that's the goal. 

Am I willing to share my learning experiences? 
Yes, that's why I'm publishing. 

Am I trying to compete with Groups dot IO? 
No with the Creative Commons license that I put on this it will already be able to be moved on to places including Groups dot io with attribution and as I get further down the road, I will probably stop maintaining this site and try to transition it to some place that has more longevity. 
An example. For model is Toshen's work on digital voice where he did a lot of good work that is still recognized as THE good overview and he has stopped maintaining it but has left the PDF out there for people to read. Probably PDF's that can't be edited and aren't the best bet, but trying to get things over to a site is anyway just some rambling thoughts that need to get put into the FAQ's and etcetera, etcetera.



==============================================

From One Note

	• Working Collecting Point — Stays on Pi Git
	• Traveling Collecting Point — Back and Forth to Laptop
	• Daily Workflow
		○ Start Pi
		○ Activate virtual environment 
		○ Pull
		○ Sftp files including traveling collecting point
		○ Close working collecting point to active collecting point
		○ Close active collecting point to backlog 
		○ Work
		○ Update change log
		○ Commit & Build
		○ Push & Test
		○ Adjust traveling collecting point as needed
		○ Copy traveling collecting point to laptop
		○ Deactivate 
		○ Backup 
		○ Copy backup to large files
	• Backup Workflow
		○ Backup git in daily
		○ Image & Rotate cards
		○ Upload Compressed images
	• Branching Plan
		○ Main
		○ Gh-pages
		○ Dev or editing
		○ Contrib 
		○ Safety & authority 
			§ only me or designate can update man and build / publish
			§ Dev = TBD — I am thinking limited access scratch pad
Contrib = place for contributors (or do they just make their own branch and pull requests 
